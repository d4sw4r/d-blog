imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@ApiBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: false
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

nelmio_api_doc:
    name:   API documentation   

fos_rest:
    routing_loader:
        default_format: json                            # All responses should be JSON formated
    param_fetcher_listener: true
    body_listener: true
    #disable_csrf_role: ROLE_USER
    body_converter:
        enabled: true
    view:
        view_response_listener: force                           # We do not include format in request, so that all responses
                                                        # will eventually be JSON formated

fos_user:
    db_driver: orm
    firewall_name: api                                  # Seems to be used when registering user/reseting password, # but since there is no "login", as so it seems to be useless in                                                 # our particular context, but still required by "FOSUserBundle"
    user_class: ApiBundle\Entity\User
    firewall_name: admin
    user_class: ApiBundle\Entity\User

fos_oauth_server:
    db_driver:           orm
    client_class:        ApiBundle\Entity\Client
    access_token_class:  ApiBundle\Entity\AccessToken
    refresh_token_class: ApiBundle\Entity\RefreshToken
    auth_code_class:     ApiBundle\Entity\AuthCode
    service:
        user_provider: fos_user.user_manager             # This property will be used when valid credentials are given to load the user upon access token creation

nelmio_cors:
    defaults:
        allow_credentials: false
        allow_origin: []
        allow_headers: []
        allow_methods: []
        expose_headers: []
        max_age: 0
    paths:
        '^/api/':
            allow_origin: ['*']
            allow_headers: ['*']
            allow_methods: ['POST', 'PUT', 'GET', 'DELETE']
            max_age: 3600

easy_admin:
    site_name: 'title'
    design:
        brand_color: '#009688'
        menu:
            - { label: 'Konfiguration' }
            - User
            - label: 'Blog'
              children: ['Posts','Tags', 'Kommentare']
            - { label: 'Diverses' }
            - Anfragen
            - { label: 'zum Blog', url: '/' }
            - { label: 'Dokumentation', route: 'nelmio_api_doc_index' }
            - { label: '' }
            - { label: 'Logout', route: 'fos_user_security_logout' }

    entities:
        User:
            class: ApiBundle\Entity\User
            label: 'Benutzer'
            list:
                title: "Alle Benutzer"
        Posts:
            class: ApiBundle\Entity\Post
            label: 'Posts'
            list:
                title: "Alle Posts"
        Tags:
            class: ApiBundle\Entity\Tag
            label: 'Tags'
            list:
                title: "Alle Tags"
        Kommentare:
            class: ApiBundle\Entity\Comment
            label: 'Kommentare'
            list:
                title: "Alle Kommentare"
        Anfragen:
            class: ApiBundle\Entity\Contact
            label: 'Anfragen'
            list:
                title: "Alle Anfragen"                    

